name: Test Report

on:
  workflow_run:
    workflows: [build]
    types:
      - completed

jobs:
  report:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'failure'
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'

      - name: Download test results
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "test-results"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/test-results.zip`, Buffer.from(download.data));

      - name: Unzip test results
        run: unzip test-results.zip

      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        with:
          name: JUnit Tests
          path: '**/build/test-results/**/TEST*.xml'
          reporter: java-junit

      - name: Publish Coverage Report
        uses: codecov/codecov-action@v3
        env:
          GITHUB_ACTION: ${{ github.event.workflow_run.name }}
          GITHUB_RUN_ID: ${{ github.event.workflow_run.id }}
          GITHUB_SHA: ${{ github.event.workflow_run.head_sha }}
          GITHUB_HEAD_REF: ${{ github.event.workflow_run.head_branch }}
        with:
          files: 'build/reports/jacoco/coverage/coverage.xml'
